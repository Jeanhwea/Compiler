   1: procedure prn();
lineno:1: PROCEDURE procedure
lineno:1: ID prn
lineno:1: LPAR (
lineno:1: RPAR )
lineno:1: SEMI ;
   2: 	var he: array[10] of integer;
lineno:2: VAR var
lineno:2: ID he
lineno:2: COLON :
lineno:2: ARRAY array
lineno:2: LBRA [
lineno:2: UNS 10
lineno:2: RBRA ]
lineno:2: OF of
lineno:2: INTEGER integer
lineno:2: SEMI ;
   3: 		i,j:integer;
lineno:3: ID i
lineno:3: COMMA ,
lineno:3: ID j
lineno:3: COLON :
lineno:3: INTEGER integer
lineno:3: SEMI ;
   4: 	procedure swap(var i,j:integer);
lineno:4: PROCEDURE procedure
lineno:4: ID swap
lineno:4: LPAR (
lineno:4: VAR var
lineno:4: ID i
lineno:4: COMMA ,
lineno:4: ID j
lineno:4: COLON :
lineno:4: INTEGER integer
lineno:4: RPAR )
lineno:4: SEMI ;
   5: 		var temp:integer;
lineno:5: VAR var
lineno:5: ID temp
lineno:5: COLON :
lineno:5: INTEGER integer
lineno:5: SEMI ;
   6: 		begin temp:=i;i:=j;j:=temp end;
lineno:6: BEGIN begin
lineno:6: ID temp
lineno:6: ASSIGN :=
lineno:6: ID i
lineno:6: SEMI ;
lineno:6: ID i
lineno:6: ASSIGN :=
lineno:6: ID j
lineno:6: SEMI ;
lineno:6: ID j
lineno:6: ASSIGN :=
lineno:6: ID temp
lineno:6: END end
lineno:6: SEMI ;
   7: 
   8: 	begin
lineno:8: BEGIN begin
   9: 	he[0]:=1;he[1]:=3;he[2]:=2;he[3]:=4;he[4]:=5;
lineno:9: ID he
lineno:9: LBRA [
lineno:9: UNS 0
lineno:9: RBRA ]
lineno:9: ASSIGN :=
lineno:9: UNS 1
lineno:9: SEMI ;
lineno:9: ID he
lineno:9: LBRA [
lineno:9: UNS 1
lineno:9: RBRA ]
lineno:9: ASSIGN :=
lineno:9: UNS 3
lineno:9: SEMI ;
lineno:9: ID he
lineno:9: LBRA [
lineno:9: UNS 2
lineno:9: RBRA ]
lineno:9: ASSIGN :=
lineno:9: UNS 2
lineno:9: SEMI ;
lineno:9: ID he
lineno:9: LBRA [
lineno:9: UNS 3
lineno:9: RBRA ]
lineno:9: ASSIGN :=
lineno:9: UNS 4
lineno:9: SEMI ;
lineno:9: ID he
lineno:9: LBRA [
lineno:9: UNS 4
lineno:9: RBRA ]
lineno:9: ASSIGN :=
lineno:9: UNS 5
lineno:9: SEMI ;
  10: 	for i:=0 to 4 do
lineno:10: FOR for
lineno:10: ID i
lineno:10: ASSIGN :=
lineno:10: UNS 0
lineno:10: TO to
lineno:10: UNS 4
lineno:10: DO do
  11: 		for j:=0 to 4 do
lineno:11: FOR for
lineno:11: ID j
lineno:11: ASSIGN :=
lineno:11: UNS 0
lineno:11: TO to
lineno:11: UNS 4
lineno:11: DO do
  12: 			if he[i]>he[j] then swap(he[i],he[j]) ;
lineno:12: IF if
lineno:12: ID he
lineno:12: LBRA [
lineno:12: ID i
lineno:12: RBRA ]
lineno:12: GTT >
lineno:12: ID he
lineno:12: LBRA [
lineno:12: ID j
lineno:12: RBRA ]
lineno:12: THEN then
lineno:12: ID swap
lineno:12: LPAR (
lineno:12: ID he
lineno:12: LBRA [
lineno:12: ID i
lineno:12: RBRA ]
lineno:12: COMMA ,
lineno:12: ID he
lineno:12: LBRA [
lineno:12: ID j
lineno:12: RBRA ]
lineno:12: RPAR )
lineno:12: SEMI ;
  13: 	i:=0;
lineno:13: ID i
lineno:13: ASSIGN :=
lineno:13: UNS 0
lineno:13: SEMI ;
  14: 	repeat
lineno:14: REPEAT repeat
  15: 	begin
lineno:15: BEGIN begin
  16: 	he[i]:=he[i]+1;
lineno:16: ID he
lineno:16: LBRA [
lineno:16: ID i
lineno:16: RBRA ]
lineno:16: ASSIGN :=
lineno:16: ID he
lineno:16: LBRA [
lineno:16: ID i
lineno:16: RBRA ]
lineno:16: PLUS +
lineno:16: UNS 1
lineno:16: SEMI ;
  17: 	i:=i+1;
lineno:17: ID i
lineno:17: ASSIGN :=
lineno:17: ID i
lineno:17: PLUS +
lineno:17: UNS 1
lineno:17: SEMI ;
  18: 	end
lineno:18: END end
  19: 	until he[i]=4;
lineno:19: UNTIL until
lineno:19: ID he
lineno:19: LBRA [
lineno:19: ID i
lineno:19: RBRA ]
lineno:19: EQU =
lineno:19: UNS 4
lineno:19: SEMI ;
  20: 	for i:=0 to 4 do
lineno:20: FOR for
lineno:20: ID i
lineno:20: ASSIGN :=
lineno:20: UNS 0
lineno:20: TO to
lineno:20: UNS 4
lineno:20: DO do
  21: 		write(he[i]);
lineno:21: WRITE write
lineno:21: LPAR (
lineno:21: ID he
lineno:21: LBRA [
lineno:21: ID i
lineno:21: RBRA ]
lineno:21: RPAR )
lineno:21: SEMI ;
  22: 	end;
lineno:22: END end
lineno:22: SEMI ;
  23: begin prn();  end.
lineno:23: BEGIN begin
lineno:23: ID prn
lineno:23: LPAR (
lineno:23: RPAR )
lineno:23: SEMI ;
lineno:23: END end
lineno:23: DOT .
  24: 
  25: {result: 6}
  26: {result: 4}
  27: {result: 3}
  28: {result: 2}
  29: {result: 1}
  30: 
lineno:31: ENDFILE 
