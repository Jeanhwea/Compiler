   1: procedure prn();
lineno:1: PROCEDURE procedure
lineno:1: ID prn
lineno:1: LPAR (
lineno:1: RPAR )
lineno:1: SEMI ;
   2: var he: array[10] of integer;
lineno:2: VAR var
lineno:2: ID he
lineno:2: COLON :
lineno:2: ARRAY array
lineno:2: LBRA [
lineno:2: UNS 10
lineno:2: RBRA ]
lineno:2: OF of
lineno:2: INTEGER integer
lineno:2: SEMI ;
   3: i,j:integer;
lineno:3: ID i
lineno:3: COMMA ,
lineno:3: ID j
lineno:3: COLON :
lineno:3: INTEGER integer
lineno:3: SEMI ;
   4: 
   5: 	procedure swap(var i,j:integer);
lineno:5: PROCEDURE procedure
lineno:5: ID swap
lineno:5: LPAR (
lineno:5: VAR var
lineno:5: ID i
lineno:5: COMMA ,
lineno:5: ID j
lineno:5: COLON :
lineno:5: INTEGER integer
lineno:5: RPAR )
lineno:5: SEMI ;
   6: 	var temp:integer;
lineno:6: VAR var
lineno:6: ID temp
lineno:6: COLON :
lineno:6: INTEGER integer
lineno:6: SEMI ;
   7: 	begin temp:=i;i:=j;j:=temp end;
lineno:7: BEGIN begin
lineno:7: ID temp
lineno:7: ASSIGN :=
lineno:7: ID i
lineno:7: SEMI ;
lineno:7: ID i
lineno:7: ASSIGN :=
lineno:7: ID j
lineno:7: SEMI ;
lineno:7: ID j
lineno:7: ASSIGN :=
lineno:7: ID temp
lineno:7: END end
lineno:7: SEMI ;
   8: 
   9: begin
lineno:9: BEGIN begin
  10: he[0]:=1;he[1]:=3;he[2]:=2;he[3]:=4;he[4]:=5;
lineno:10: ID he
lineno:10: LBRA [
lineno:10: UNS 0
lineno:10: RBRA ]
lineno:10: ASSIGN :=
lineno:10: UNS 1
lineno:10: SEMI ;
lineno:10: ID he
lineno:10: LBRA [
lineno:10: UNS 1
lineno:10: RBRA ]
lineno:10: ASSIGN :=
lineno:10: UNS 3
lineno:10: SEMI ;
lineno:10: ID he
lineno:10: LBRA [
lineno:10: UNS 2
lineno:10: RBRA ]
lineno:10: ASSIGN :=
lineno:10: UNS 2
lineno:10: SEMI ;
lineno:10: ID he
lineno:10: LBRA [
lineno:10: UNS 3
lineno:10: RBRA ]
lineno:10: ASSIGN :=
lineno:10: UNS 4
lineno:10: SEMI ;
lineno:10: ID he
lineno:10: LBRA [
lineno:10: UNS 4
lineno:10: RBRA ]
lineno:10: ASSIGN :=
lineno:10: UNS 5
lineno:10: SEMI ;
  11: 
  12: for i:=0 to 4 do
lineno:12: FOR for
lineno:12: ID i
lineno:12: ASSIGN :=
lineno:12: UNS 0
lineno:12: TO to
lineno:12: UNS 4
lineno:12: DO do
  13: 	for j:=0 to 4 do
lineno:13: FOR for
lineno:13: ID j
lineno:13: ASSIGN :=
lineno:13: UNS 0
lineno:13: TO to
lineno:13: UNS 4
lineno:13: DO do
  14: 		if he[i]>he[j] then swap(he[i],he[j]) ;
lineno:14: IF if
lineno:14: ID he
lineno:14: LBRA [
lineno:14: ID i
lineno:14: RBRA ]
lineno:14: GTT >
lineno:14: ID he
lineno:14: LBRA [
lineno:14: ID j
lineno:14: RBRA ]
lineno:14: THEN then
lineno:14: ID swap
lineno:14: LPAR (
lineno:14: ID he
lineno:14: LBRA [
lineno:14: ID i
lineno:14: RBRA ]
lineno:14: COMMA ,
lineno:14: ID he
lineno:14: LBRA [
lineno:14: ID j
lineno:14: RBRA ]
lineno:14: RPAR )
lineno:14: SEMI ;
  15: i:=0;
lineno:15: ID i
lineno:15: ASSIGN :=
lineno:15: UNS 0
lineno:15: SEMI ;
  16: repeat
lineno:16: REPEAT repeat
  17: begin
lineno:17: BEGIN begin
  18: he[i]:=he[i]+1;
lineno:18: ID he
lineno:18: LBRA [
lineno:18: ID i
lineno:18: RBRA ]
lineno:18: ASSIGN :=
lineno:18: ID he
lineno:18: LBRA [
lineno:18: ID i
lineno:18: RBRA ]
lineno:18: PLUS +
lineno:18: UNS 1
lineno:18: SEMI ;
  19: i:=i+1;
lineno:19: ID i
lineno:19: ASSIGN :=
lineno:19: ID i
lineno:19: PLUS +
lineno:19: UNS 1
lineno:19: SEMI ;
  20: end
lineno:20: END end
  21: until he[i]=4;
lineno:21: UNTIL until
lineno:21: ID he
lineno:21: LBRA [
lineno:21: ID i
lineno:21: RBRA ]
lineno:21: EQU =
lineno:21: UNS 4
lineno:21: SEMI ;
  22: for i:=0 to 4 do
lineno:22: FOR for
lineno:22: ID i
lineno:22: ASSIGN :=
lineno:22: UNS 0
lineno:22: TO to
lineno:22: UNS 4
lineno:22: DO do
  23:  write(he[i]);
lineno:23: WRITE write
lineno:23: LPAR (
lineno:23: ID he
lineno:23: LBRA [
lineno:23: ID i
lineno:23: RBRA ]
lineno:23: RPAR )
lineno:23: SEMI ;
  24: end;
lineno:24: END end
lineno:24: SEMI ;
  25: begin prn();  end.
lineno:25: BEGIN begin
lineno:25: ID prn
lineno:25: LPAR (
lineno:25: RPAR )
lineno:25: SEMI ;
lineno:25: END end
lineno:25: DOT .
  26: 
  27: {result: 6}
  28: {result: 4}
  29: {result: 3}
  30: {result: 2}
  31: {result: 1}
lineno:32: ENDFILE 
