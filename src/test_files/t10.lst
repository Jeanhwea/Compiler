   1: procedure ge();
lineno:1: PROCEDURE procedure
lineno:1: ID ge
lineno:1: LPAR (
lineno:1: RPAR )
lineno:1: SEMI ;
   2: var a:array [10] of integer;
lineno:2: VAR var
lineno:2: ID a
lineno:2: COLON :
lineno:2: ARRAY array
lineno:2: LBRA [
lineno:2: UNS 10
lineno:2: RBRA ]
lineno:2: OF of
lineno:2: INTEGER integer
lineno:2: SEMI ;
   3: b:array [10] of integer;
lineno:3: ID b
lineno:3: COLON :
lineno:3: ARRAY array
lineno:3: LBRA [
lineno:3: UNS 10
lineno:3: RBRA ]
lineno:3: OF of
lineno:3: INTEGER integer
lineno:3: SEMI ;
   4: c:array [10] of integer;
lineno:4: ID c
lineno:4: COLON :
lineno:4: ARRAY array
lineno:4: LBRA [
lineno:4: UNS 10
lineno:4: RBRA ]
lineno:4: OF of
lineno:4: INTEGER integer
lineno:4: SEMI ;
   5: index:integer;
lineno:5: ID index
lineno:5: COLON :
lineno:5: INTEGER integer
lineno:5: SEMI ;
   6: final:integer;
lineno:6: ID final
lineno:6: COLON :
lineno:6: INTEGER integer
lineno:6: SEMI ;
   7: begin 
lineno:7: BEGIN begin
   8: for index:=0 to 9 do c[index]:=index;
lineno:8: FOR for
lineno:8: ID index
lineno:8: ASSIGN :=
lineno:8: UNS 0
lineno:8: TO to
lineno:8: UNS 9
lineno:8: DO do
lineno:8: ID c
lineno:8: LBRA [
lineno:8: ID index
lineno:8: RBRA ]
lineno:8: ASSIGN :=
lineno:8: ID index
lineno:8: SEMI ;
   9: for index:=0 to 9 do b[c[index]]:=index;
lineno:9: FOR for
lineno:9: ID index
lineno:9: ASSIGN :=
lineno:9: UNS 0
lineno:9: TO to
lineno:9: UNS 9
lineno:9: DO do
lineno:9: ID b
lineno:9: LBRA [
lineno:9: ID c
lineno:9: LBRA [
lineno:9: ID index
lineno:9: RBRA ]
lineno:9: RBRA ]
lineno:9: ASSIGN :=
lineno:9: ID index
lineno:9: SEMI ;
  10: for index:=0 to 9 do a[b[c[index]]]:=index;
lineno:10: FOR for
lineno:10: ID index
lineno:10: ASSIGN :=
lineno:10: UNS 0
lineno:10: TO to
lineno:10: UNS 9
lineno:10: DO do
lineno:10: ID a
lineno:10: LBRA [
lineno:10: ID b
lineno:10: LBRA [
lineno:10: ID c
lineno:10: LBRA [
lineno:10: ID index
lineno:10: RBRA ]
lineno:10: RBRA ]
lineno:10: RBRA ]
lineno:10: ASSIGN :=
lineno:10: ID index
lineno:10: SEMI ;
  11: final:=c[5]*b[c[1]]+(a[b[c[2]]*c[2]] / (a[2]-a[1]))-b[2]+b[3]-b[4]+1;
lineno:11: ID final
lineno:11: ASSIGN :=
lineno:11: ID c
lineno:11: LBRA [
lineno:11: UNS 5
lineno:11: RBRA ]
lineno:11: STAR *
lineno:11: ID b
lineno:11: LBRA [
lineno:11: ID c
lineno:11: LBRA [
lineno:11: UNS 1
lineno:11: RBRA ]
lineno:11: RBRA ]
lineno:11: PLUS +
lineno:11: LPAR (
lineno:11: ID a
lineno:11: LBRA [
lineno:11: ID b
lineno:11: LBRA [
lineno:11: ID c
lineno:11: LBRA [
lineno:11: UNS 2
lineno:11: RBRA ]
lineno:11: RBRA ]
lineno:11: STAR *
lineno:11: ID c
lineno:11: LBRA [
lineno:11: UNS 2
lineno:11: RBRA ]
lineno:11: RBRA ]
lineno:11: OVER /
lineno:11: LPAR (
lineno:11: ID a
lineno:11: LBRA [
lineno:11: UNS 2
lineno:11: RBRA ]
lineno:11: MINUS -
lineno:11: ID a
lineno:11: LBRA [
lineno:11: UNS 1
lineno:11: RBRA ]
lineno:11: RPAR )
lineno:11: RPAR )
lineno:11: MINUS -
lineno:11: ID b
lineno:11: LBRA [
lineno:11: UNS 2
lineno:11: RBRA ]
lineno:11: PLUS +
lineno:11: ID b
lineno:11: LBRA [
lineno:11: UNS 3
lineno:11: RBRA ]
lineno:11: MINUS -
lineno:11: ID b
lineno:11: LBRA [
lineno:11: UNS 4
lineno:11: RBRA ]
lineno:11: PLUS +
lineno:11: UNS 1
lineno:11: SEMI ;
  12: for index:=0 to 9  do write(a[index]);
lineno:12: FOR for
lineno:12: ID index
lineno:12: ASSIGN :=
lineno:12: UNS 0
lineno:12: TO to
lineno:12: UNS 9
lineno:12: DO do
lineno:12: WRITE write
lineno:12: LPAR (
lineno:12: ID a
lineno:12: LBRA [
lineno:12: ID index
lineno:12: RBRA ]
lineno:12: RPAR )
lineno:12: SEMI ;
  13: write(final)
lineno:13: WRITE write
lineno:13: LPAR (
lineno:13: ID final
lineno:13: RPAR )
  14: end;
lineno:14: END end
lineno:14: SEMI ;
  15: begin ge() end.
lineno:15: BEGIN begin
lineno:15: ID ge
lineno:15: LPAR (
lineno:15: RPAR )
lineno:15: END end
lineno:15: DOT .
  16: 
  17: {01234567897}
lineno:18: ENDFILE 
